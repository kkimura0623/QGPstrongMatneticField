Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: _pole_integ_func_class._

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (_pole_integ_func_class._) [1] pole_integ_func_class.F90(1,8)


    Report from: Code generation optimizations [cg]

pole_integ_func_class.F90(1,8):remark #34051: REGISTER ALLOCATION : [_pole_integ_func_class._] pole_integ_func_class.F90:1

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :       6
            Global    :       0
            Local     :       6
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: POLE_INTEG_FUNC_CLASS::INTEG_F_TAYLOR2

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (POLE_INTEG_FUNC_CLASS::INTEG_F_TAYLOR2) [2] pole_integ_func_class.F90(219,10)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at pole_integ_func_class.F90(236,5)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at pole_integ_func_class.F90(236,5)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

    Report from: Code generation optimizations [cg]

pole_integ_func_class.F90(219,10):remark #34051: REGISTER ALLOCATION : [_pole_integ_func_class_mp_integ_f_taylor2_] pole_integ_func_class.F90:219

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   20[ rax rdx rcx rsi rdi r8 mm0-mm7 zmm0-zmm5]
        
    Routine temporaries
        Total         :      63
            Global    :      10
            Local     :      53
        Regenerable   :      14
        Spilled       :       0
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       6 [0.00e+00 ~ 0.0%]
            Writes    :       6 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: POLE_INTEG_FUNC_CLASS::INTEG_G

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (POLE_INTEG_FUNC_CLASS::INTEG_G) [3] pole_integ_func_class.F90(254,10)
  -> INLINE: (297,13) POLE_INTEG_FUNC_CLASS::INTEG_G_TAYLOR1


    Report from: Code generation optimizations [cg]

pole_integ_func_class.F90(254,10):remark #34051: REGISTER ALLOCATION : [_pole_integ_func_class_mp_integ_g_] pole_integ_func_class.F90:254

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   24[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15 mm0-mm7 zmm0-zmm3]
        
    Routine temporaries
        Total         :     439
            Global    :      22
            Local     :     417
        Regenerable   :      97
        Spilled       :      24
        
    Routine stack
        Variables     :      32 bytes*
            Reads     :      54 [1.17e+01 ~ 11.5%]
            Writes    :      57 [1.18e+01 ~ 11.6%]
        Spills        :     296 bytes*
            Reads     :      22 [1.24e+00 ~ 1.2%]
            Writes    :      22 [1.24e+00 ~ 1.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: POLE_INTEG_FUNC_CLASS::INTEG_G_TAYLOR1

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (POLE_INTEG_FUNC_CLASS::INTEG_G_TAYLOR1) [4] pole_integ_func_class.F90(320,10)


    Report from: Code generation optimizations [cg]

pole_integ_func_class.F90(320,10):remark #34051: REGISTER ALLOCATION : [_pole_integ_func_class_mp_integ_g_taylor1_] pole_integ_func_class.F90:320

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   21[ rax rdx rcx rbx rsi rdi r8 r12-r15 mm0-mm7 zmm0-zmm1]
        
    Routine temporaries
        Total         :     370
            Global    :      15
            Local     :     355
        Regenerable   :      96
        Spilled       :      22
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :      27 [2.27e+01 ~ 5.6%]
            Writes    :      27 [2.27e+01 ~ 5.6%]
        Spills        :     272 bytes*
            Reads     :      20 [1.68e+01 ~ 4.2%]
            Writes    :      20 [1.68e+01 ~ 4.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: POLE_INTEG_FUNC_CLASS::INTEG_H

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (POLE_INTEG_FUNC_CLASS::INTEG_H) [5] pole_integ_func_class.F90(361,10)
  -> (401,14) POLE_INTEG_FUNC_CLASS::INTEG_H_TAYLOR1
  -> (408,14) POLE_INTEG_FUNC_CLASS::INTEG_H_TAYLOR1
  -> INLINE: (417,14) POLE_INTEG_FUNC_CLASS::INTEG_H_TAYLOR2


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at pole_integ_func_class.F90(508,5) inlined into pole_integ_func_class.F90(417,14)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at pole_integ_func_class.F90(508,5) inlined into pole_integ_func_class.F90(417,14)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

    Report from: Code generation optimizations [cg]

pole_integ_func_class.F90(361,10):remark #34051: REGISTER ALLOCATION : [_pole_integ_func_class_mp_integ_h_] pole_integ_func_class.F90:361

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   25[ rax rdx rcx rbx rsi rdi r8-r10 r12 r14 mm0-mm7 zmm0-zmm5]
        
    Routine temporaries
        Total         :     181
            Global    :      24
            Local     :     157
        Regenerable   :      22
        Spilled       :       8
        
    Routine stack
        Variables     :      64 bytes*
            Reads     :      43 [2.57e+01 ~ 14.9%]
            Writes    :      42 [2.56e+01 ~ 14.8%]
        Spills        :      72 bytes*
            Reads     :      13 [5.33e+00 ~ 3.1%]
            Writes    :       5 [4.88e+00 ~ 2.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: POLE_INTEG_FUNC_CLASS::INTEG_H_TAYLOR1

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (POLE_INTEG_FUNC_CLASS::INTEG_H_TAYLOR1) [6] pole_integ_func_class.F90(434,10)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at pole_integ_func_class.F90(470,5)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at pole_integ_func_class.F90(470,5)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

    Report from: Code generation optimizations [cg]

pole_integ_func_class.F90(434,10):remark #34051: REGISTER ALLOCATION : [_pole_integ_func_class_mp_integ_h_taylor1_] pole_integ_func_class.F90:434

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   25[ rax rdx rcx rbx rsi rdi r8 r12-r15 mm0-mm7 zmm0-zmm5]
        
    Routine temporaries
        Total         :     468
            Global    :      15
            Local     :     453
        Regenerable   :     125
        Spilled       :      22
        
    Routine stack
        Variables     :      88 bytes*
            Reads     :      33 [2.27e+01 ~ 5.1%]
            Writes    :      38 [2.27e+01 ~ 5.1%]
        Spills        :     272 bytes*
            Reads     :      17 [1.43e+01 ~ 3.2%]
            Writes    :      17 [1.43e+01 ~ 3.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: POLE_INTEG_FUNC_CLASS::INTEG_H_TAYLOR2

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (POLE_INTEG_FUNC_CLASS::INTEG_H_TAYLOR2) [7] pole_integ_func_class.F90(488,10)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at pole_integ_func_class.F90(508,5)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at pole_integ_func_class.F90(508,5)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

    Report from: Code generation optimizations [cg]

pole_integ_func_class.F90(488,10):remark #34051: REGISTER ALLOCATION : [_pole_integ_func_class_mp_integ_h_taylor2_] pole_integ_func_class.F90:488

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   20[ rax rdx rcx rsi rdi r8 mm0-mm7 zmm0-zmm5]
        
    Routine temporaries
        Total         :      64
            Global    :      11
            Local     :      53
        Regenerable   :      15
        Spilled       :       0
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       6 [0.00e+00 ~ 0.0%]
            Writes    :       6 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: POLE_INTEG_FUNC_CLASS::INTEG_I

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (POLE_INTEG_FUNC_CLASS::INTEG_I) [8] pole_integ_func_class.F90(526,10)
  -> (556,10) POLE_INTEG_FUNC_CLASS::INTEG_F
  -> INLINE: (558,8) POLE_INTEG_FUNC_CLASS::INTEG_G
    -> INLINE: (297,13) POLE_INTEG_FUNC_CLASS::INTEG_G_TAYLOR1


    Report from: Code generation optimizations [cg]

pole_integ_func_class.F90(526,10):remark #34051: REGISTER ALLOCATION : [_pole_integ_func_class_mp_integ_i_] pole_integ_func_class.F90:526

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   26[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15 mm0-mm7 zmm0-zmm4]
        
    Routine temporaries
        Total         :     479
            Global    :      28
            Local     :     451
        Regenerable   :      99
        Spilled       :      29
        
    Routine stack
        Variables     :      64 bytes*
            Reads     :      65 [2.20e+01 ~ 13.2%]
            Writes    :      80 [2.37e+01 ~ 14.3%]
        Spills        :     376 bytes*
            Reads     :      37 [4.84e+00 ~ 2.9%]
            Writes    :      37 [4.84e+00 ~ 2.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: POLE_INTEG_FUNC_CLASS::INTEG_F

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (POLE_INTEG_FUNC_CLASS::INTEG_F) [9] pole_integ_func_class.F90(14,10)
  -> (65,13) POLE_INTEG_FUNC_CLASS::INTEG_F_TAYLOR1
  -> (72,13) POLE_INTEG_FUNC_CLASS::INTEG_F_TAYLOR1
  -> INLINE: (104,13) POLE_INTEG_FUNC_CLASS::INTEG_F_TAYLOR2


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at pole_integ_func_class.F90(236,5) inlined into pole_integ_func_class.F90(104,13)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at pole_integ_func_class.F90(236,5) inlined into pole_integ_func_class.F90(104,13)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

    Report from: Code generation optimizations [cg]

pole_integ_func_class.F90(14,10):remark #34051: REGISTER ALLOCATION : [_pole_integ_func_class_mp_integ_f_] pole_integ_func_class.F90:14

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   24[ rax rdx rcx rsi rdi r8-r12 mm0-mm7 zmm0-zmm5]
        
    Routine temporaries
        Total         :     291
            Global    :      43
            Local     :     248
        Regenerable   :      28
        Spilled       :       6
        
    Routine stack
        Variables     :      64 bytes*
            Reads     :      81 [2.47e+01 ~ 15.6%]
            Writes    :      80 [2.46e+01 ~ 15.6%]
        Spills        :      80 bytes*
            Reads     :      23 [2.51e+00 ~ 1.6%]
            Writes    :      11 [1.97e+00 ~ 1.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: POLE_INTEG_FUNC_CLASS::INTEG_F_TAYLOR1

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (POLE_INTEG_FUNC_CLASS::INTEG_F_TAYLOR1) [10] pole_integ_func_class.F90(164,10)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at pole_integ_func_class.F90(201,5)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at pole_integ_func_class.F90(201,5)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

    Report from: Code generation optimizations [cg]

pole_integ_func_class.F90(164,10):remark #34051: REGISTER ALLOCATION : [_pole_integ_func_class_mp_integ_f_taylor1_] pole_integ_func_class.F90:164

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   25[ rax rdx rcx rbx rsi rdi r8 r12-r15 mm0-mm7 zmm0-zmm5]
        
    Routine temporaries
        Total         :     365
            Global    :      15
            Local     :     350
        Regenerable   :      93
        Spilled       :      13
        
    Routine stack
        Variables     :      88 bytes*
            Reads     :      33 [2.27e+01 ~ 6.7%]
            Writes    :      38 [2.27e+01 ~ 6.7%]
        Spills        :     128 bytes*
            Reads     :       8 [6.72e+00 ~ 2.0%]
            Writes    :       8 [6.72e+00 ~ 2.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
