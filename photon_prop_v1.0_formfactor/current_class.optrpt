Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: _current_class._

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (_current_class._) [1] current_class.F90(1,8)


    Report from: Code generation optimizations [cg]

current_class.F90(1,8):remark #34051: REGISTER ALLOCATION : [_current_class._] current_class.F90:1

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :       6
            Global    :       0
            Local     :       6
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: CURRENT_CLASS::SOURCE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (CURRENT_CLASS::SOURCE) [2] current_class.F90(8,12)


    Report from: Code generation optimizations [cg]

current_class.F90(8,12):remark #34051: REGISTER ALLOCATION : [_current_class_mp_source_] current_class.F90:8

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rsi rdi mm0-mm7]
        
    Routine temporaries
        Total         :      42
            Global    :       0
            Local     :      42
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       1 [1.00e+00 ~ 1.1%]
            Writes    :       1 [1.00e+00 ~ 1.1%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: CURRENT_CLASS::CURRENT

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (CURRENT_CLASS::CURRENT) [3] current_class.F90(44,12)


    Report from: Code generation optimizations [cg]

current_class.F90(44,12):remark #34051: REGISTER ALLOCATION : [_current_class_mp_current_] current_class.F90:44

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rdx rsi rdi mm0-mm7]
        
    Routine temporaries
        Total         :      92
            Global    :       0
            Local     :      92
        Regenerable   :       0
        Spilled       :       7
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [2.00e+00 ~ 1.1%]
            Writes    :       2 [2.00e+00 ~ 1.1%]
        Spills        :     112 bytes*
            Reads     :      18 [1.80e+01 ~ 9.5%]
            Writes    :       7 [7.00e+00 ~ 3.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
