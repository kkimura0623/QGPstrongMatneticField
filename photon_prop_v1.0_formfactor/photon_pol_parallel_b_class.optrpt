Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: _photon_pol_parallel_b_class._

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (_photon_pol_parallel_b_class._) [1] photon_pol_parallel_b_class.F90(1,8)


    Report from: Code generation optimizations [cg]

photon_pol_parallel_b_class.F90(1,8):remark #34051: REGISTER ALLOCATION : [_photon_pol_parallel_b_class._] photon_pol_parallel_b_class.F90:1

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :       6
            Global    :       0
            Local     :       6
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: PHOTON_POL_PARALLEL_B_CLASS::N0B

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (PHOTON_POL_PARALLEL_B_CLASS::N0B) [2] photon_pol_parallel_b_class.F90(40,10)
  -> DELETED: (49,11) _for_emit_diagnostic


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at photon_pol_parallel_b_class.F90(49,11)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at photon_pol_parallel_b_class.F90(49,11)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at photon_pol_parallel_b_class.F90(49,11)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at photon_pol_parallel_b_class.F90(49,11)
<Remainder, Multiversioned v2>
LOOP END

    Report from: Code generation optimizations [cg]

photon_pol_parallel_b_class.F90(40,10):remark #34051: REGISTER ALLOCATION : [_photon_pol_parallel_b_class_mp_n0b_] photon_pol_parallel_b_class.F90:40

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   21[ rax rdx rcx rbx rsi rdi r8-r12 r15 mm0-mm7 zmm0]
        
    Routine temporaries
        Total         :     116
            Global    :      39
            Local     :      77
        Regenerable   :      17
        Spilled       :      10
        
    Routine stack
        Variables     :      36 bytes*
            Reads     :      13 [1.30e+01 ~ 6.8%]
            Writes    :      15 [1.50e+01 ~ 7.8%]
        Spills        :     104 bytes*
            Reads     :       9 [9.00e+00 ~ 4.7%]
            Writes    :       7 [7.00e+00 ~ 3.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: PHOTON_POL_PARALLEL_B_CLASS::N1B

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (PHOTON_POL_PARALLEL_B_CLASS::N1B) [3] photon_pol_parallel_b_class.F90(65,10)
  -> DELETED: (74,11) _for_emit_diagnostic


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at photon_pol_parallel_b_class.F90(74,11)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at photon_pol_parallel_b_class.F90(74,11)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at photon_pol_parallel_b_class.F90(74,11)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at photon_pol_parallel_b_class.F90(74,11)
<Remainder, Multiversioned v2>
LOOP END

    Report from: Code generation optimizations [cg]

photon_pol_parallel_b_class.F90(65,10):remark #34051: REGISTER ALLOCATION : [_photon_pol_parallel_b_class_mp_n1b_] photon_pol_parallel_b_class.F90:65

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   18[ rax rdx rcx rbx rsi rdi r8-r11 r13 r15 mm0-mm4 zmm0]
        
    Routine temporaries
        Total         :      80
            Global    :      34
            Local     :      46
        Regenerable   :       9
        Spilled       :       8
        
    Routine stack
        Variables     :      28 bytes*
            Reads     :       8 [8.00e+00 ~ 5.5%]
            Writes    :       9 [9.00e+00 ~ 6.2%]
        Spills        :      80 bytes*
            Reads     :       5 [5.00e+00 ~ 3.5%]
            Writes    :       5 [5.00e+00 ~ 3.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: PHOTON_POL_PARALLEL_B_CLASS::N2B

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (PHOTON_POL_PARALLEL_B_CLASS::N2B) [4] photon_pol_parallel_b_class.F90(85,10)
  -> DELETED: (94,11) _for_emit_diagnostic


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at photon_pol_parallel_b_class.F90(94,11)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at photon_pol_parallel_b_class.F90(94,11)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at photon_pol_parallel_b_class.F90(94,11)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at photon_pol_parallel_b_class.F90(94,11)
<Remainder, Multiversioned v2>
LOOP END

    Report from: Code generation optimizations [cg]

photon_pol_parallel_b_class.F90(85,10):remark #34051: REGISTER ALLOCATION : [_photon_pol_parallel_b_class_mp_n2b_] photon_pol_parallel_b_class.F90:85

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   22[ rax rdx rcx rbx rsi rdi r8-r13 r15 mm0-mm7 zmm0]
        
    Routine temporaries
        Total         :     145
            Global    :      44
            Local     :     101
        Regenerable   :      25
        Spilled       :      14
        
    Routine stack
        Variables     :      44 bytes*
            Reads     :      18 [1.80e+01 ~ 7.5%]
            Writes    :      21 [2.10e+01 ~ 8.8%]
        Spills        :     136 bytes*
            Reads     :      13 [1.30e+01 ~ 5.4%]
            Writes    :      10 [1.00e+01 ~ 4.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: PHOTON_POL_PARALLEL_B_CLASS::INTEG_X

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (PHOTON_POL_PARALLEL_B_CLASS::INTEG_X) [5] photon_pol_parallel_b_class.F90(111,10)


    Report from: Code generation optimizations [cg]

photon_pol_parallel_b_class.F90(111,10):remark #34051: REGISTER ALLOCATION : [_photon_pol_parallel_b_class_mp_integ_x_] photon_pol_parallel_b_class.F90:111

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rsi rdi r8-r9 r13-r15 zmm0]
        
    Routine temporaries
        Total         :      35
            Global    :      11
            Local     :      24
        Regenerable   :      12
        Spilled       :       3
        
    Routine stack
        Variables     :      56 bytes*
            Reads     :       4 [4.00e+00 ~ 8.7%]
            Writes    :       3 [3.00e+00 ~ 6.5%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: PHOTON_POL_PARALLEL_B_CLASS::N0_PARALLEL_B

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (PHOTON_POL_PARALLEL_B_CLASS::N0_PARALLEL_B) [6] photon_pol_parallel_b_class.F90(158,10)
  -> DELETED: (191,3) _for_emit_diagnostic
  -> DELETED: (193,13) _for_emit_diagnostic


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at photon_pol_parallel_b_class.F90(191,3)
   remark #25399: memcopy generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
LOOP END

LOOP BEGIN at photon_pol_parallel_b_class.F90(193,3)
   remark #25399: memcopy generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
LOOP END


Non-optimizable loops:


LOOP BEGIN at photon_pol_parallel_b_class.F90(212,3)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

    Report from: Code generation optimizations [cg]

photon_pol_parallel_b_class.F90(170,36):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
photon_pol_parallel_b_class.F90(191,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
photon_pol_parallel_b_class.F90(193,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
photon_pol_parallel_b_class.F90(158,10):remark #34051: REGISTER ALLOCATION : [_photon_pol_parallel_b_class_mp_n0_parallel_b_] photon_pol_parallel_b_class.F90:158

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   27[ rax rdx rcx rbx rsi rdi r8-r15 mm0-mm6 zmm0-zmm5]
        
    Routine temporaries
        Total         :     284
            Global    :      45
            Local     :     239
        Regenerable   :      98
        Spilled       :      14
        
    Routine stack
        Variables     :   64512 bytes*
            Reads     :      21 [4.99e+01 ~ 8.4%]
            Writes    :      52 [6.62e+01 ~ 11.1%]
        Spills        :      64 bytes*
            Reads     :      10 [8.80e+00 ~ 1.5%]
            Writes    :       8 [8.00e+00 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: PHOTON_POL_PARALLEL_B_CLASS::N1_PARALLEL_B

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (PHOTON_POL_PARALLEL_B_CLASS::N1_PARALLEL_B) [7] photon_pol_parallel_b_class.F90(221,10)
  -> DELETED: (256,3) _for_emit_diagnostic
  -> DELETED: (258,13) _for_emit_diagnostic
  -> INLINE: (266,14) PHOTON_POL_PARALLEL_B_CLASS::INTEG_X
  -> INLINE: (269,18) PHOTON_POL_PARALLEL_B_CLASS::INTEG_X


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at photon_pol_parallel_b_class.F90(256,3)
   remark #25399: memcopy generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
LOOP END

LOOP BEGIN at photon_pol_parallel_b_class.F90(258,3)
   remark #25399: memcopy generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
LOOP END


Non-optimizable loops:


LOOP BEGIN at photon_pol_parallel_b_class.F90(270,3)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

    Report from: Code generation optimizations [cg]

photon_pol_parallel_b_class.F90(230,36):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
photon_pol_parallel_b_class.F90(256,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
photon_pol_parallel_b_class.F90(258,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
photon_pol_parallel_b_class.F90(221,10):remark #34051: REGISTER ALLOCATION : [_photon_pol_parallel_b_class_mp_n1_parallel_b_] photon_pol_parallel_b_class.F90:221

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   22[ rax rdx rcx rbx rsi rdi r8-r15 mm0-mm3 zmm0-zmm3]
        
    Routine temporaries
        Total         :     277
            Global    :      43
            Local     :     234
        Regenerable   :      94
        Spilled       :      14
        
    Routine stack
        Variables     :   64568 bytes*
            Reads     :      24 [4.85e+01 ~ 9.7%]
            Writes    :      58 [8.12e+01 ~ 16.2%]
        Spills        :      64 bytes*
            Reads     :       9 [7.80e+00 ~ 1.6%]
            Writes    :       8 [8.00e+00 ~ 1.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: PHOTON_POL_PARALLEL_B_CLASS::N2_PARALLEL_B

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (PHOTON_POL_PARALLEL_B_CLASS::N2_PARALLEL_B) [8] photon_pol_parallel_b_class.F90(279,10)
  -> DELETED: (321,3) _for_emit_diagnostic
  -> DELETED: (323,13) _for_emit_diagnostic


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at photon_pol_parallel_b_class.F90(321,3)
   remark #25399: memcopy generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
LOOP END

LOOP BEGIN at photon_pol_parallel_b_class.F90(323,3)
   remark #25399: memcopy generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
LOOP END


Non-optimizable loops:


LOOP BEGIN at photon_pol_parallel_b_class.F90(339,3)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at photon_pol_parallel_b_class.F90(344,3)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

    Report from: Code generation optimizations [cg]

photon_pol_parallel_b_class.F90(291,36):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
photon_pol_parallel_b_class.F90(321,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
photon_pol_parallel_b_class.F90(323,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
photon_pol_parallel_b_class.F90(279,10):remark #34051: REGISTER ALLOCATION : [_photon_pol_parallel_b_class_mp_n2_parallel_b_] photon_pol_parallel_b_class.F90:279

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   26[ rax rdx rcx rbx rsi rdi r8-r15 mm0-mm7 zmm0-zmm3]
        
    Routine temporaries
        Total         :     315
            Global    :      54
            Local     :     261
        Regenerable   :      96
        Spilled       :      14
        
    Routine stack
        Variables     :   64472 bytes*
            Reads     :      29 [8.90e+01 ~ 10.8%]
            Writes    :      64 [1.27e+02 ~ 15.4%]
        Spills        :      72 bytes*
            Reads     :      13 [2.07e+01 ~ 2.5%]
            Writes    :      10 [8.98e+00 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
