Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: _polygamma_mod._

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (_polygamma_mod._) [1] polygamma_mod.F90(1,8)


    Report from: Code generation optimizations [cg]

polygamma_mod.F90(1,8):remark #34051: REGISTER ALLOCATION : [_polygamma_mod._] polygamma_mod.F90:1

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :       6
            Global    :       0
            Local     :       6
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: POLYGAMMA_MOD::DIGAMMA

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (POLYGAMMA_MOD::DIGAMMA) [2] polygamma_mod.F90(11,10)
  -> INLINE: (14,9) POLYGAMMA_MOD::POLYGAMMA


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at polygamma_mod.F90(46,5) inlined into polygamma_mod.F90(14,9)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model   [ polygamma_mod.F90(47,7) ]
LOOP END

    Report from: Code generation optimizations [cg]

polygamma_mod.F90(61:9)::_polygamma_mod_mp_digamma_:  Assume directive not useful: removing

polygamma_mod.F90(11,10):remark #34051: REGISTER ALLOCATION : [_polygamma_mod_mp_digamma_] polygamma_mod.F90:11

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   21[ rax rdx rcx rbx rsi rdi r8-r10 r13-r15 mm0-mm7 zmm0]
        
    Routine temporaries
        Total         :     107
            Global    :      22
            Local     :      85
        Regenerable   :      32
        Spilled       :       8
        
    Routine stack
        Variables     :      88 bytes*
            Reads     :      14 [1.07e+01 ~ 14.1%]
            Writes    :      16 [1.08e+01 ~ 14.2%]
        Spills        :      88 bytes*
            Reads     :       9 [4.37e+00 ~ 5.8%]
            Writes    :      10 [5.33e+00 ~ 7.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: POLYGAMMA_MOD::POLYGAMMA

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (POLYGAMMA_MOD::POLYGAMMA) [3] polygamma_mod.F90(18,10)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at polygamma_mod.F90(46,5)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model   [ polygamma_mod.F90(47,7) ]
LOOP END

LOOP BEGIN at polygamma_mod.F90(50,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between f (51:7) and f (51:7)
LOOP END

    Report from: Code generation optimizations [cg]

polygamma_mod.F90(18,10):remark #34051: REGISTER ALLOCATION : [_polygamma_mod_mp_polygamma_] polygamma_mod.F90:18

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   22[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15 mm0-mm7 zmm0]
        
    Routine temporaries
        Total         :     398
            Global    :      30
            Local     :     368
        Regenerable   :     138
        Spilled       :      11
        
    Routine stack
        Variables     :     104 bytes*
            Reads     :      37 [1.45e+01 ~ 10.4%]
            Writes    :      43 [1.47e+01 ~ 10.5%]
        Spills        :      96 bytes*
            Reads     :      10 [3.64e+00 ~ 2.6%]
            Writes    :      10 [2.66e+00 ~ 1.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
